// vite.config.ts
import { defineConfig, loadEnv } from "file:///C:/Users/H3C/Desktop/%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E7%A1%85%E8%B0%B7%E7%94%84%E9%80%89/node_modules/.pnpm/vite@5.4.10_@types+node@22.8.7_sass@1.80.5/node_modules/vite/dist/node/index.js";
import { createSvgIconsPlugin } from "file:///C:/Users/H3C/Desktop/%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E7%A1%85%E8%B0%B7%E7%94%84%E9%80%89/node_modules/.pnpm/vite-plugin-svg-icons@2.0.1_vite@5.4.10_@types+node@22.8.7_sass@1.80.5_/node_modules/vite-plugin-svg-icons/dist/index.mjs";
import vue from "file:///C:/Users/H3C/Desktop/%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E7%A1%85%E8%B0%B7%E7%94%84%E9%80%89/node_modules/.pnpm/@vitejs+plugin-vue@5.1.4_vite@5.4.10_@types+node@22.8.7_sass@1.80.5__vue@3.5.12_typescript@5.6.3_/node_modules/@vitejs/plugin-vue/dist/index.mjs";
import path from "path";
var vite_config_default = defineConfig(({ command, mode }) => {
  let env = loadEnv(mode, process.cwd());
  return {
    // 配置代理跨域
    server: {
      proxy: {
        [env.VITE_APP_BASE_API]: {
          //获取数据的服务器地址设置
          target: env.VITE_SERVE,
          //需要代理跨域
          changeOrigin: true,
          //路径重写
          rewrite: (path2) => path2.replace(/^\/api/, "")
        }
      }
    },
    plugins: [
      vue(),
      createSvgIconsPlugin({
        iconDirs: [path.resolve(process.cwd(), "src/assets/icons")],
        symbolId: "icon-[dir]-[name]"
      })
    ],
    resolve: {
      alias: {
        "@": path.resolve("./src")
        // 相对路径别名配置，使用 @ 代替 src
      }
    },
    css: {
      preprocessorOptions: {
        scss: {
          javascriptEnabled: true,
          additionalData: '@import "./src/styles/variable.scss";'
        }
      }
    }
  };
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcudHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImNvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9kaXJuYW1lID0gXCJDOlxcXFxVc2Vyc1xcXFxIM0NcXFxcRGVza3RvcFxcXFxcdTdGNTFcdTk4NzVcdThCQkVcdThCQTFcXFxcXHU1MjREXHU3QUVGXHU1QjY2XHU0RTYwXFxcXFx1OTg3OVx1NzZFRVx1NUI5RVx1NjIxOFxcXFxcdTc4NDVcdThDMzdcdTc1MDRcdTkwMDlcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZmlsZW5hbWUgPSBcIkM6XFxcXFVzZXJzXFxcXEgzQ1xcXFxEZXNrdG9wXFxcXFx1N0Y1MVx1OTg3NVx1OEJCRVx1OEJBMVxcXFxcdTUyNERcdTdBRUZcdTVCNjZcdTRFNjBcXFxcXHU5ODc5XHU3NkVFXHU1QjlFXHU2MjE4XFxcXFx1Nzg0NVx1OEMzN1x1NzUwNFx1OTAwOVxcXFx2aXRlLmNvbmZpZy50c1wiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9pbXBvcnRfbWV0YV91cmwgPSBcImZpbGU6Ly8vQzovVXNlcnMvSDNDL0Rlc2t0b3AvJUU3JUJEJTkxJUU5JUExJUI1JUU4JUFFJUJFJUU4JUFFJUExLyVFNSU4OSU4RCVFNyVBQiVBRiVFNSVBRCVBNiVFNCVCOSVBMC8lRTklQTElQjklRTclOUIlQUUlRTUlQUUlOUUlRTYlODglOTgvJUU3JUExJTg1JUU4JUIwJUI3JUU3JTk0JTg0JUU5JTgwJTg5L3ZpdGUuY29uZmlnLnRzXCI7aW1wb3J0IHsgZGVmaW5lQ29uZmlnLCBsb2FkRW52IH0gZnJvbSAndml0ZSc7XG5pbXBvcnQgeyBjcmVhdGVTdmdJY29uc1BsdWdpbiB9IGZyb20gJ3ZpdGUtcGx1Z2luLXN2Zy1pY29ucyc7IC8vXHU1RjE1XHU1MTY1c3ZnXHU5NzAwXHU4OTgxXHU3NTI4XHU1MjMwXHU3Njg0XHU2M0QyXHU0RUY2XG5pbXBvcnQgdnVlIGZyb20gJ0B2aXRlanMvcGx1Z2luLXZ1ZSc7XG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbi8vIGh0dHBzOi8vdml0ZS5kZXYvY29uZmlnL1xuZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29uZmlnKCh7IGNvbW1hbmQsIG1vZGUgfSkgPT4ge1xuICBsZXQgZW52ID0gbG9hZEVudihtb2RlLCBwcm9jZXNzLmN3ZCgpKTtcbiAgcmV0dXJuIHtcbiAgICAvLyBcdTkxNERcdTdGNkVcdTRFRTNcdTc0MDZcdThERThcdTU3REZcbiAgICBzZXJ2ZXI6IHtcbiAgICAgIHByb3h5OiB7XG4gICAgICAgIFtlbnYuVklURV9BUFBfQkFTRV9BUEldOiB7XG4gICAgICAgICAgLy9cdTgzQjdcdTUzRDZcdTY1NzBcdTYzNkVcdTc2ODRcdTY3MERcdTUyQTFcdTU2NjhcdTU3MzBcdTU3NDBcdThCQkVcdTdGNkVcbiAgICAgICAgICB0YXJnZXQ6IGVudi5WSVRFX1NFUlZFLFxuICAgICAgICAgIC8vXHU5NzAwXHU4OTgxXHU0RUUzXHU3NDA2XHU4REU4XHU1N0RGXG4gICAgICAgICAgY2hhbmdlT3JpZ2luOiB0cnVlLFxuICAgICAgICAgIC8vXHU4REVGXHU1Rjg0XHU5MUNEXHU1MTk5XG4gICAgICAgICAgcmV3cml0ZTogKHBhdGgpID0+IHBhdGgucmVwbGFjZSgvXlxcL2FwaS8sICcnKVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBwbHVnaW5zOiBbXG4gICAgICB2dWUoKSxcbiAgICAgIGNyZWF0ZVN2Z0ljb25zUGx1Z2luKHtcbiAgICAgICAgaWNvbkRpcnM6IFtwYXRoLnJlc29sdmUocHJvY2Vzcy5jd2QoKSwgJ3NyYy9hc3NldHMvaWNvbnMnKV0sXG4gICAgICAgIHN5bWJvbElkOiAnaWNvbi1bZGlyXS1bbmFtZV0nXG4gICAgICB9KVxuICAgIF0sXG4gICAgcmVzb2x2ZToge1xuICAgICAgYWxpYXM6IHtcbiAgICAgICAgJ0AnOiBwYXRoLnJlc29sdmUoJy4vc3JjJykgLy8gXHU3NkY4XHU1QkY5XHU4REVGXHU1Rjg0XHU1MjJCXHU1NDBEXHU5MTREXHU3RjZFXHVGRjBDXHU0RjdGXHU3NTI4IEAgXHU0RUUzXHU2NkZGIHNyY1xuICAgICAgfVxuICAgIH0sXG4gICAgY3NzOiB7XG4gICAgICBwcmVwcm9jZXNzb3JPcHRpb25zOiB7XG4gICAgICAgIHNjc3M6IHtcbiAgICAgICAgICBqYXZhc2NyaXB0RW5hYmxlZDogdHJ1ZSxcbiAgICAgICAgICBhZGRpdGlvbmFsRGF0YTogJ0BpbXBvcnQgXCIuL3NyYy9zdHlsZXMvdmFyaWFibGUuc2Nzc1wiOydcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfTtcbn0pO1xuXG4vLyAgIHtcbi8vICAgLy8gXHU5MTREXHU3RjZFXHU0RUUzXHU3NDA2XHU4REU4XHU1N0RGXG4vLyAgIHNlcnZlcjoge1xuLy8gICAgIHByb3h5OiB7XG4vLyAgICAgICAvL2xvYWRFbnYoJycsIHByb2Nlc3MuY3dkKCkpIFx1ODg2OFx1NzkzQVx1NEVDRVx1NUY1M1x1NTI0RFx1NURFNVx1NEY1Q1x1NzZFRVx1NUY1NVx1NTJBMFx1OEY3RFx1NzNBRlx1NTg4M1x1NTNEOFx1OTFDRlx1RkYwQ1x1ODNCN1x1NTNENlx1NjU3MFx1NjM2RVx1NzY4NFx1NjcwRFx1NTJBMVx1NTY2OFx1NTczMFx1NTc0MFx1OEJCRVx1N0Y2RVx1RkYwQ1x1NEY3Rlx1NzUyOFx1NjVCOVx1NjJFQ1x1NTNGNyBbXSBcdTY2MkYgSmF2YVNjcmlwdCBcdTc2ODRcdThCQTFcdTdCOTdcdTVDNUVcdTYwMjdcdTU0MERcdThCRURcdTZDRDVcdUZGMENcdTYxMEZcdTU0NzNcdTc3NDBcdThGRDlcdTRFMkFcdTk1MkVcdTc2ODRcdTUwM0NcdTY2MkZcdTUyQThcdTYwMDFcdThCQTFcdTdCOTdcdTUxRkFcdTY3NjVcdTc2ODRcdTMwMDJcbi8vICAgICAgIFtsb2FkRW52KCcnLCBwcm9jZXNzLmN3ZCgpKS5WSVRFX0FQUF9CQVNFX0FQSV06IHtcbi8vICAgICAgICAgLy9cdTgzQjdcdTUzRDZcdTY1NzBcdTYzNkVcdTc2ODRcdTY3MERcdTUyQTFcdTU2NjhcdTU3MzBcdTU3NDBcdThCQkVcdTdGNkVcbi8vICAgICAgICAgdGFyZ2V0OiBsb2FkRW52KCcnLCBwcm9jZXNzLmN3ZCgpKS5WSVRFX1NFUlZFLFxuLy8gICAgICAgICAvL1x1OTcwMFx1ODk4MVx1NEVFM1x1NzQwNlx1OERFOFx1NTdERlxuLy8gICAgICAgICBjaGFuZ2VPcmlnaW46IHRydWUsXG4vLyAgICAgICAgIC8vcmV3cml0ZSBcdTY2MkZcdTRFMDBcdTRFMkFcdTUxRkRcdTY1NzBcdUZGMENcdTc1MjhcdTRFOEVcdTVCRjlcdThCRjdcdTZDNDJcdTc2ODRcdThERUZcdTVGODRcdThGREJcdTg4NENcdTkxQ0RcdTUxOTlcdUZGMENcdTVCODNcdTYzQTVcdTUzRDdcdThCRjdcdTZDNDJcdTc2ODRcdThERUZcdTVGODQgcGF0aCBcdTRGNUNcdTRFM0FcdTUzQzJcdTY1NzBcdUZGMENcdTVFNzZcdTRGN0ZcdTc1MjhcdTZCNjNcdTUyMTlcdTg4NjhcdThGQkVcdTVGMEYgL15cXC9hcGkvIFx1NTMzOVx1OTE0RFx1OERFRlx1NUY4NFx1NUYwMFx1NTkzNFx1NzY4NCAvYXBpXHVGRjBDXHU3MTM2XHU1NDBFXHU1QzA2XHU1MTc2XHU2NkZGXHU2MzYyXHU0RTNBXHU3QTdBXHU1QjU3XHU3QjI2XHU0RTMyXHUzMDAyXG4vLyAgICAgICAgIHJld3JpdGU6IChwYXRoKSA9PiBwYXRoLnJlcGxhY2UoL15cXC9hcGkvLCAnJylcbi8vICAgICAgIH1cbi8vICAgICB9XG4vLyAgIH0sXG4vLyAgIHBsdWdpbnM6IFtcbi8vICAgICB2dWUoKSxcbi8vICAgICBjcmVhdGVTdmdJY29uc1BsdWdpbih7XG4vLyAgICAgICBpY29uRGlyczogW3BhdGgucmVzb2x2ZShwcm9jZXNzLmN3ZCgpLCAnc3JjL2Fzc2V0cy9pY29ucycpXSxcbi8vICAgICAgIHN5bWJvbElkOiAnaWNvbi1bZGlyXS1bbmFtZV0nXG4vLyAgICAgfSlcbi8vICAgXSxcbi8vICAgcmVzb2x2ZToge1xuLy8gICAgIGFsaWFzOiB7XG4vLyAgICAgICAnQCc6IHBhdGgucmVzb2x2ZSgnLi9zcmMnKSAvLyBcdTc2RjhcdTVCRjlcdThERUZcdTVGODRcdTUyMkJcdTU0MERcdTkxNERcdTdGNkVcdUZGMENcdTRGN0ZcdTc1MjggQCBcdTRFRTNcdTY2RkYgc3JjXG4vLyAgICAgfVxuLy8gICB9LFxuLy8gICBjc3M6IHtcbi8vICAgICBwcmVwcm9jZXNzb3JPcHRpb25zOiB7XG4vLyAgICAgICBzY3NzOiB7XG4vLyAgICAgICAgIGphdmFzY3JpcHRFbmFibGVkOiB0cnVlLFxuLy8gICAgICAgICBhZGRpdGlvbmFsRGF0YTogJ0BpbXBvcnQgXCIuL3NyYy9zdHlsZXMvdmFyaWFibGUuc2Nzc1wiOydcbi8vICAgICAgIH1cbi8vICAgICB9XG4vLyAgIH1cbi8vIH0pO1xuIl0sCiAgIm1hcHBpbmdzIjogIjtBQUEwYixTQUFTLGNBQWMsZUFBZTtBQUNoZSxTQUFTLDRCQUE0QjtBQUNyQyxPQUFPLFNBQVM7QUFDaEIsT0FBTyxVQUFVO0FBRWpCLElBQU8sc0JBQVEsYUFBYSxDQUFDLEVBQUUsU0FBUyxLQUFLLE1BQU07QUFDakQsTUFBSSxNQUFNLFFBQVEsTUFBTSxRQUFRLElBQUksQ0FBQztBQUNyQyxTQUFPO0FBQUE7QUFBQSxJQUVMLFFBQVE7QUFBQSxNQUNOLE9BQU87QUFBQSxRQUNMLENBQUMsSUFBSSxpQkFBaUIsR0FBRztBQUFBO0FBQUEsVUFFdkIsUUFBUSxJQUFJO0FBQUE7QUFBQSxVQUVaLGNBQWM7QUFBQTtBQUFBLFVBRWQsU0FBUyxDQUFDQSxVQUFTQSxNQUFLLFFBQVEsVUFBVSxFQUFFO0FBQUEsUUFDOUM7QUFBQSxNQUNGO0FBQUEsSUFDRjtBQUFBLElBQ0EsU0FBUztBQUFBLE1BQ1AsSUFBSTtBQUFBLE1BQ0oscUJBQXFCO0FBQUEsUUFDbkIsVUFBVSxDQUFDLEtBQUssUUFBUSxRQUFRLElBQUksR0FBRyxrQkFBa0IsQ0FBQztBQUFBLFFBQzFELFVBQVU7QUFBQSxNQUNaLENBQUM7QUFBQSxJQUNIO0FBQUEsSUFDQSxTQUFTO0FBQUEsTUFDUCxPQUFPO0FBQUEsUUFDTCxLQUFLLEtBQUssUUFBUSxPQUFPO0FBQUE7QUFBQSxNQUMzQjtBQUFBLElBQ0Y7QUFBQSxJQUNBLEtBQUs7QUFBQSxNQUNILHFCQUFxQjtBQUFBLFFBQ25CLE1BQU07QUFBQSxVQUNKLG1CQUFtQjtBQUFBLFVBQ25CLGdCQUFnQjtBQUFBLFFBQ2xCO0FBQUEsTUFDRjtBQUFBLElBQ0Y7QUFBQSxFQUNGO0FBQ0YsQ0FBQzsiLAogICJuYW1lcyI6IFsicGF0aCJdCn0K
